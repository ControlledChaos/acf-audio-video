{"version":3,"sources":["webpack:///acf-audio-video-field.min.js","webpack:///webpack/bootstrap 4efee605c4d1d2ea049b","webpack:///./scripts/src/field/index.js","webpack:///./scripts/src/field/SelectFrame.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_defineProperty","key","value","Object","defineProperty","enumerable","configurable","writable","_extends","assign","target","i","arguments","length","source","prototype","hasOwnProperty","_SelectFrame","_SelectFrame2","$","jQuery","acf","fields","audioVideo","field","extend","type","$el","actions","ready","append","events","click a[data-name=\"add\"]","click a[data-name=\"edit\"]","click a[data-name=\"remove\"]","focus","this","$field","find","$inputContainer","$playerContainer","o","get_data","allowedTypes","allowed_types","split","map","t","trim","selectFrameType","general_type","inputName","__getInputName","children","attr","indexOf","join","splice","initialize","__getTag","attributes","__guessTag","audio_types","render","_ref","_this","tag","nextAttributes","prevAttributes","sources","undefined","__getSources","empty","removeClass","$mediaElement","addClass","html","__getPlayerMarkup","MediaElementPlayer","keys","forEach","name","__insertHiddenInput","__triggerChange","_this2","reduce","ext","concat","__getMime","src","atts","__getTagAtts","height","_ref2","defaults","playerDefaults","attName","_$field$data","data","appendTo","_","isEqual","trigger","add","_this3","$repeater","get_closest_field","multiple","exists","selectFrame","title","_e","mode","library","mime_types","select","attachment","idx","$row","closest","nextAll","each","el","get_field","repeater","doFocus","url","toLowerCase","pop","image","test","poster","args","set","open","edit","_this4","__getAttributesFromInputs","shortcode","__getShortcode","editFrame","wp","media","on","__getNextAttributes","detach","toArray","getAttribute","replace","frameAttributes","remove","prop","bind","_classCallCheck","instance","Constructor","TypeError","SelectFrame","settings","createFrame","_get_media_frame_settings","states","_getLibraryTypes","Query","query","isset","mirroring","_acfuploader","controller","Library","priority","filterable","editable","allowLocalEdits","push","EditImage","frame","uploader","options","params","allowed_extensions","addEvents","_add_media_frame_events","toolbar","content","get","filters","all","text","uploaded","audio","video","k","filter","props","setTimeout","generalType","String","libraryTypes","Array","postId","isNumeric","button","post_id","frames"],"mappings":"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","file":"acf-audio-video-field.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _SelectFrame = __webpack_require__(1);\n\t\n\tvar _SelectFrame2 = _interopRequireDefault(_SelectFrame);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tvar $ = jQuery;\n\t\n\tacf.fields.audioVideo = acf.field.extend({\n\t  type: 'audioVideo',\n\t  $el: null,\n\t  actions: {\n\t    'ready': 'initialize',\n\t    'append': 'initialize'\n\t  },\n\t  events: {\n\t    'click a[data-name=\"add\"]': 'add',\n\t    'click a[data-name=\"edit\"]': 'edit',\n\t    'click a[data-name=\"remove\"]': 'remove'\n\t  },\n\t  focus: function focus() {\n\t    this.$el = this.$field.find('.acf-audio-video-uploader');\n\t    this.$inputContainer = this.$el.find('.acf-hidden');\n\t    this.$playerContainer = this.$el.find('.player-container');\n\t    this.o = acf.get_data(this.$el);\n\t    this.allowedTypes = this.o.allowed_types.split(',').map(function (t) {\n\t      return t.trim();\n\t    });\n\t    this.selectFrameType = !this.o.general_type || this.o.general_type == 'both' ? ['audio', 'video'] : this.o.general_type;\n\t    this.inputName = this.__getInputName();\n\t  },\n\t  __getInputName: function __getInputName() {\n\t    var inputName = this.$inputContainer.children(':first').attr('name').split('][');\n\t\n\t    if (inputName[inputName.length - 1].indexOf('field') == 0) return inputName.join('][');\n\t\n\t    inputName.splice(inputName.length - 1, 1);\n\t\n\t    return inputName.join('][') + ']';\n\t  },\n\t  initialize: function initialize() {\n\t    /* noop */\n\t  },\n\t  __getTag: function __getTag(attributes) {\n\t    if (typeof attributes === 'undefined') {\n\t      return this.o.general_type;\n\t    }\n\t    return this.o.general_type && this.o.general_type !== 'both' ? this.o.general_type : this.__guessTag(attributes);\n\t  },\n\t  __guessTag: function __guessTag(attributes) {\n\t    for (var i = 0; i < this.allowedTypes.length; i++) {\n\t      if (attributes[this.allowedTypes[i]]) {\n\t        return this.o.audio_types.indexOf(this.allowedTypes[i]) > -1 ? 'audio' : 'video';\n\t      }\n\t    }return 'video';\n\t  },\n\t  render: function render(_ref) {\n\t    var _this = this;\n\t\n\t    var tag = _ref.tag,\n\t        nextAttributes = _ref.nextAttributes,\n\t        prevAttributes = _ref.prevAttributes;\n\t\n\t    var sources = tag && tag != undefined ? this.__getSources(tag, nextAttributes) : [];\n\t\n\t    this.$playerContainer.empty().removeClass('audio video');\n\t    this.$inputContainer.empty();\n\t    if (sources.length) {\n\t      var $mediaElement = this.$playerContainer.addClass(tag).html(this.__getPlayerMarkup(tag, nextAttributes, sources)).find(tag);\n\t\n\t      new MediaElementPlayer($mediaElement[0]);\n\t\n\t      Object.keys(nextAttributes).forEach(function (name) {\n\t        return _this.__insertHiddenInput(name, nextAttributes[name]);\n\t      });\n\t      this.$el.addClass('has-value');\n\t    } else {\n\t      this.__insertHiddenInput();\n\t      this.$el.removeClass('has-value');\n\t    }\n\t\n\t    this.__triggerChange(prevAttributes, nextAttributes);\n\t  },\n\t  __getSources: function __getSources(tag, attributes) {\n\t    var _this2 = this;\n\t\n\t    return this.allowedTypes.reduce(function (sources, ext) {\n\t      return attributes[ext] ? sources.concat({\n\t        type: _this2.__getMime(tag, ext),\n\t        src: attributes[ext]\n\t      }) : sources;\n\t    }, []);\n\t  },\n\t  __getMime: function __getMime(tag, ext) {\n\t    switch (ext) {\n\t      case 'mp3':\n\t        return 'audio/mpeg';\n\t      case 'wav':\n\t        return 'audio/wav';\n\t      case 'mp4':\n\t      case 'm4v':\n\t        return 'video/mp4';\n\t      case 'webm':\n\t        return 'video/webm';\n\t      case 'ogv':\n\t        return 'video/ogg';\n\t      case 'ogg':\n\t        return tag + '/ogg';\n\t      case 'flv':\n\t        return 'video/flv';\n\t      default:\n\t        return tag + '/' + ext;\n\t    }\n\t  },\n\t  __getPlayerMarkup: function __getPlayerMarkup(tag, attributes, sources) {\n\t    var atts = this.__getTagAtts(tag, attributes);\n\t    var height = tag == 'video' ? 'height=\"360\"' : '';\n\t\n\t    return '<div class=\"wp-' + tag + '\">\\n      <!--[if lt IE 9]><script>document.createElement(\\'' + tag + '\\');</script><![endif]-->\\n      <' + tag + ' class=\"wp-' + tag + '-shortcode\" width=\"640\" ' + height + ' ' + atts + ' controls>\\n        ' + sources.map(function (_ref2) {\n\t      var type = _ref2.type,\n\t          src = _ref2.src;\n\t      return '<source type=\"' + type + '\" src=\"' + src + '?_=1\"/>';\n\t    }) + '\\n      </' + tag + '>\\n    </div>';\n\t  },\n\t  __getTagAtts: function __getTagAtts(tag, attributes) {\n\t    var defaults = this.o.playerDefaults[tag];\n\t\n\t    return Object.keys(defaults).concat('poster').reduce(function (atts, name) {\n\t      return attributes.hasOwnProperty(name) ? atts + ' ' + name + '=\"' + attributes[name] + '\"' : atts;\n\t    }, '');\n\t  },\n\t  __insertHiddenInput: function __insertHiddenInput(attName, value) {\n\t    var _$field$data = this.$field.data(),\n\t        key = _$field$data.key;\n\t\n\t    var name = !attName ? this.inputName : this.inputName + '[' + attName + ']';\n\t\n\t    $('<input type=\"hidden\">').attr({ name: name, value: value }).appendTo(this.$inputContainer);\n\t  },\n\t  __triggerChange: function __triggerChange(prevAttributes, nextAttributes) {\n\t    /* register unsaved changes */\n\t    if (!prevAttributes || !_.isEqual(prevAttributes, nextAttributes)) this.$inputContainer.children(':first').trigger('change');\n\t  },\n\t  add: function add() {\n\t    var _this3 = this;\n\t\n\t    var $field = this.$field;\n\t    var $repeater = acf.get_closest_field($field, 'repeater');\n\t    var multiple = $repeater.exists();\n\t    this.selectFrame = new _SelectFrame2.default({\n\t      title: acf._e('audioVideo', 'select'),\n\t      mode: 'select',\n\t      type: this.selectFrameType,\n\t      field: $field.data('key'),\n\t      multiple: multiple,\n\t      library: this.o.library,\n\t      mime_types: this.o.allowed_types,\n\t      select: function select(attachment, idx) {\n\t        /* Populate subsequent fields of this kind\n\t         * if this field is in a repeater field and\n\t         * user has selected multiple files.\n\t         */\n\t        var $row = multiple && $field.closest('.acf-row');\n\t\n\t        if (idx > 0) {\n\t          var key = $field.data('key');\n\t\n\t          $field = false;\n\t\n\t          // find next field\n\t          $row.nextAll('.acf-row:visible').each(function (idx, el) {\n\t            $field = acf.get_field(key, $(el));\n\t\n\t            if (!$field) return;\n\t\n\t            // bail early if next file uploader has value\n\t            if ($field.find('.acf-file-uploader.has-value').exists()) {\n\t              $field = false;\n\t              return;\n\t            }\n\t\n\t            // end loop if $next is found\n\t            return false;\n\t          });\n\t\n\t          // add extra row if next is not found\n\t          if (!$field) {\n\t            $row = acf.fields.repeater.doFocus($repeater).add();\n\t\n\t            // bail early if no $row (maximum rows hit)\n\t            if (!$row) return false;\n\t\n\t            // get next $field\n\t            $field = acf.get_field(key, $row);\n\t          }\n\t        }\n\t\n\t        var ext = attachment.attributes.url.toLowerCase().split('.').pop();\n\t        var nextAttributes = _defineProperty({}, ext, attachment.attributes.url);\n\t        var tag = _this3.__getTag(nextAttributes);\n\t\n\t        if (attachment.attributes.image && attachment.attributes.image.src && !/wp-includes\\/images\\/media\\/(audio|video).png$/.test(attachment.attributes.image.src)) nextAttributes.poster = attachment.attributes.image.src;\n\t\n\t        var args = { tag: tag, nextAttributes: nextAttributes };\n\t\n\t        _this3.set('$field', $field).render(args);\n\t      }\n\t    }).open();\n\t  },\n\t  edit: function edit() {\n\t    var _this4 = this;\n\t\n\t    var prevAttributes = this.__getAttributesFromInputs();\n\t    var tag = this.__getTag(prevAttributes);\n\t    var shortcode = this.__getShortcode(tag, prevAttributes);\n\t\n\t    if (shortcode) {\n\t      var editFrame = wp.media[tag].edit(shortcode).open();\n\t\n\t      editFrame.on('close', function () {\n\t        var nextAttributes = _this4.__getNextAttributes(tag, editFrame.media.attributes);\n\t        var $repeater = acf.get_closest_field(_this4.$field, 'repeater');\n\t        var args = { tag: tag, nextAttributes: nextAttributes, prevAttributes: prevAttributes };\n\t\n\t        _this4.render(args);\n\t        editFrame.detach();\n\t      });\n\t    }\n\t  },\n\t  __getAttributesFromInputs: function __getAttributesFromInputs() {\n\t    return this.$inputContainer.children().toArray().reduce(function (attributes, el) {\n\t      var name = el.getAttribute('name').replace(/.*\\[(.*)\\]$/, '$1');\n\t      var value = el.getAttribute('value');\n\t\n\t      return _extends({}, attributes, _defineProperty({}, name, value));\n\t    }, {});\n\t  },\n\t  __getShortcode: function __getShortcode(tag, attributes) {\n\t    var atts = Object.keys(attributes).reduce(function (atts, name) {\n\t      return atts + ' ' + name + '=\"' + attributes[name] + '\"';\n\t    }, '');\n\t\n\t    return atts && '[' + tag + ' ' + atts + '][/' + tag + ']';\n\t  },\n\t  __getNextAttributes: function __getNextAttributes(tag, frameAttributes) {\n\t    var defaults = this.o.playerDefaults[tag];\n\t    var nextAttributes = {};\n\t\n\t    if (frameAttributes.poster) nextAttributes.poster = frameAttributes.poster;\n\t\n\t    Object.keys(defaults).forEach(function (name) {\n\t      if (frameAttributes[name] != defaults[name]) nextAttributes[name] = frameAttributes[name];\n\t    });\n\t\n\t    this.allowedTypes.forEach(function (ext) {\n\t      if (frameAttributes[ext]) nextAttributes[ext] = frameAttributes[ext];\n\t    });\n\t\n\t    return nextAttributes;\n\t  },\n\t  remove: function remove() {\n\t    this.render({});\n\t  }\n\t});\n\t\n\t/* auto-bind context to custom helper methods */\n\tObject.keys(acf.fields.audioVideo).forEach(function (prop) {\n\t  if (/^__/.test(prop)) acf.fields.audioVideo[prop] = acf.fields.audioVideo[prop].bind(acf.fields.audioVideo);\n\t});\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar $ = jQuery;\n\t\n\tvar SelectFrame = function SelectFrame(settings) {\n\t  var _this = this;\n\t\n\t  _classCallCheck(this, SelectFrame);\n\t\n\t  this.createFrame = function () {\n\t    var attributes = acf.media._get_media_frame_settings({\n\t      title: _this.settings.title,\n\t      multiple: _this.settings.multiple,\n\t      library: {},\n\t      states: []\n\t    }, _this.settings);\n\t\n\t    if (_this.settings.hasOwnProperty('mime_types')) attributes.library.type = _this._getLibraryTypes();\n\t\n\t    var Query = wp.media.query(attributes.library);\n\t\n\t    if (acf.isset(Query, 'mirroring', 'args')) Query.mirroring.args._acfuploader = _this.settings.field;\n\t\n\t    attributes.states = [new wp.media.controller.Library({\n\t      library: Query,\n\t      multiple: attributes.multiple,\n\t      title: attributes.title,\n\t      priority: 20,\n\t      filterable: 'all',\n\t      editable: true,\n\t      allowLocalEdits: true\n\t    })];\n\t\n\t    if (acf.isset(wp, 'media', 'controller', 'EditImage')) attributes.states.push(new wp.media.controller.EditImage());\n\t\n\t    _this.frame = wp.media(attributes);\n\t    _this.frame.uploader.options.uploader.params.allowed_extensions = _this.settings.mime_types;\n\t    _this.frame.acf = _this.settings;\n\t    _this.addEvents();\n\t    _this.frame = acf.media._add_media_frame_events(_this.frame, _this.settings);\n\t  };\n\t\n\t  this.addEvents = function () {\n\t    _this.frame.on('content:activate:browse', function () {\n\t      var toolbar = _this.frame.content.get().toolbar;\n\t      var filters = toolbar.get('filters');\n\t\n\t      filters.filters.all.text = acf._e('audioVideo', 'all');\n\t\n\t      delete filters.filters.uploaded;\n\t      delete filters.filters.audio;\n\t      delete filters.filters.video;\n\t      delete filters.filters.image;\n\t\n\t      $.each(filters.filters, function (k, filter) {\n\t        if (filter.props.type === null) filter.props.type = _this.settings.type;\n\t      });\n\t    });\n\t  };\n\t\n\t  this.open = function () {\n\t    setTimeout(function () {\n\t      return _this.frame.open();\n\t    });\n\t\n\t    return _this;\n\t  };\n\t\n\t  this._getLibraryTypes = function () {\n\t    var allowedTypes = _this.settings.mime_types.split(',').map(function (t) {\n\t      return t.trim();\n\t    });\n\t    var generalType = _this.settings.type instanceof String ? _this.settings.type : 'video';\n\t\n\t    var libraryTypes = allowedTypes.map(function (ext) {\n\t      return acf.fields.audioVideo.__getMime(generalType, ext);\n\t    });\n\t\n\t    /* allow both audio/ogg and video/ogg */\n\t    if (_this.settings.type instanceof Array && allowedTypes.indexOf('ogg') > -1) libraryTypes.push('audio/ogg');\n\t\n\t    return libraryTypes;\n\t  };\n\t\n\t  var postId = acf.get('post_id');\n\t\n\t  if (!$.isNumeric(postId)) postId = 0;\n\t\n\t  this.settings = _extends({\n\t    mode: 'select', // 'select', 'edit'\n\t    title: '', // 'Upload Image'\n\t    button: '', // 'Select Image'\n\t    type: '', // 'image', ''\n\t    field: '', // 'field_123'\n\t    mime_types: '', // 'pdf, etc'\n\t    library: 'all', // 'all', 'uploadedTo'\n\t    multiple: false, // false, true, 'add'\n\t    attachment: 0, // the attachment to edit\n\t    post_id: postId, // the post being edited\n\t    select: function select() {}\n\t  }, settings);\n\t\n\t  if (this.settings.id) this.settings.attachment = this.settings.id;\n\t\n\t  this.createFrame();\n\t\n\t  acf.media.frames.push(this.frame);\n\t\n\t  return this;\n\t};\n\t\n\texports.default = SelectFrame;\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// acf-audio-video-field.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4efee605c4d1d2ea049b","import SelectFrame from './SelectFrame'\n\nconst $ = jQuery\n\nacf.fields.audioVideo = acf.field.extend({\n  type: 'audioVideo',\n  $el: null,\n  actions: {\n    'ready': 'initialize',\n    'append': 'initialize'\n  },\n  events: {\n    'click a[data-name=\"add\"]': 'add',\n    'click a[data-name=\"edit\"]': 'edit',\n    'click a[data-name=\"remove\"]': 'remove'\n  },\n  focus: function () {\n    this.$el = this.$field.find('.acf-audio-video-uploader')\n    this.$inputContainer = this.$el.find('.acf-hidden')\n    this.$playerContainer = this.$el.find('.player-container')\n    this.o = acf.get_data(this.$el)\n    this.allowedTypes = this.o.allowed_types.split(',').map(t => t.trim())\n    this.selectFrameType = !this.o.general_type || this.o.general_type == 'both'\n      ? ['audio', 'video']\n      : this.o.general_type\n    this.inputName = this.__getInputName()\n  },\n  __getInputName: function () {\n    const inputName = this.$inputContainer\n      .children(':first')\n      .attr('name')\n      .split('][')\n\n    if (inputName[inputName.length - 1].indexOf('field') == 0)\n      return inputName.join('][')\n\n    inputName.splice(inputName.length - 1, 1)\n\n    return inputName.join('][')+']'\n  },\n  initialize: function () {\n    /* noop */\n  },\n  __getTag: function (attributes) {\n    if (typeof attributes === 'undefined') { return this.o.general_type }\n    return this.o.general_type && this.o.general_type !== 'both'\n      ? this.o.general_type\n      : this.__guessTag(attributes)\n  },\n  __guessTag: function (attributes) {\n    for (let i = 0; i < this.allowedTypes.length; i++)\n      if (attributes[this.allowedTypes[i]]) {\n        return this.o.audio_types.indexOf(this.allowedTypes[i]) > -1\n          ? 'audio'\n          : 'video'\n      }\n\n    return 'video'\n  },\n  render: function ({ tag, nextAttributes, prevAttributes }) {\n    const sources = ( tag && tag != undefined ) \n      ? this.__getSources(tag, nextAttributes)\n      : []\n\n    this.$playerContainer.empty().removeClass('audio video')\n    this.$inputContainer.empty()\n    if (sources.length) {\n      const $mediaElement = this.$playerContainer\n        .addClass(tag)\n        .html(this.__getPlayerMarkup(tag, nextAttributes, sources))\n        .find(tag)\n\n      new MediaElementPlayer($mediaElement[0])\n      \n      Object.keys(nextAttributes).forEach(name =>\n        this.__insertHiddenInput(name, nextAttributes[name])\n      )\n      this.$el.addClass('has-value')\n    } else {\n      this.__insertHiddenInput()\n      this.$el.removeClass('has-value')\n    }\n\n    this.__triggerChange(prevAttributes, nextAttributes);\n  },\n  __getSources: function (tag, attributes) {\n    return this.allowedTypes.reduce(\n      (sources, ext) =>\n        attributes[ext]\n          ? sources.concat({\n              type: this.__getMime(tag, ext),\n              src: attributes[ext]\n            })\n          : sources,\n      []\n    )\n  },\n  __getMime: function (tag, ext) {\n    switch(ext) {\n      case 'mp3':\n        return 'audio/mpeg'\n      case 'wav':\n        return 'audio/wav'\n      case 'mp4':\n      case 'm4v':\n        return 'video/mp4'\n      case 'webm':\n        return 'video/webm'\n      case 'ogv':\n        return 'video/ogg'\n      case 'ogg':\n        return `${tag}/ogg`\n      case 'flv':\n        return 'video/flv'\n      default:\n        return `${tag}/${ext}`\n    }\n  },\n  __getPlayerMarkup: function (tag, attributes, sources) {\n    const atts = this.__getTagAtts(tag, attributes)\n    const height = tag == 'video'\n      ? 'height=\"360\"'\n      : ''\n\n    return `<div class=\"wp-${tag}\">\n      <!--[if lt IE 9]><script>document.createElement('${tag}');</script><![endif]-->\n      <${tag} class=\"wp-${tag}-shortcode\" width=\"640\" ${height} ${atts} controls>\n        ${sources.map(({ type, src }) =>\n          `<source type=\"${type}\" src=\"${src}?_=1\"/>`\n        )}\n      </${tag}>\n    </div>`\n  },\n  __getTagAtts: function (tag, attributes) {\n    const defaults = this.o.playerDefaults[tag]\n\n    return Object\n      .keys(defaults).concat('poster')\n      .reduce(\n        (atts, name) =>\n          attributes.hasOwnProperty(name)\n            ? `${atts} ${name}=\"${attributes[name]}\"`\n            : atts,\n        ''\n      )\n  },\n  __insertHiddenInput: function (attName, value) {\n    const { key } = this.$field.data()\n    const name = !attName\n      ? this.inputName\n      : `${this.inputName}[${attName}]`\n\n    $('<input type=\"hidden\">')\n      .attr({ name, value })\n      .appendTo(this.$inputContainer)\n  },\n  __triggerChange: function (prevAttributes, nextAttributes) {\n    /* register unsaved changes */\n    if (!prevAttributes || !_.isEqual(prevAttributes, nextAttributes))\n      this.$inputContainer.children(':first').trigger('change')\n  },\n  add: function () {\n    let $field = this.$field\n    const $repeater = acf.get_closest_field($field, 'repeater')\n    const multiple = $repeater.exists()\n    this.selectFrame = new SelectFrame({\n      title: acf._e('audioVideo', 'select'),\n      mode: 'select',\n      type: this.selectFrameType,\n      field: $field.data('key'),\n      multiple,\n      library: this.o.library,\n      mime_types: this.o.allowed_types,\n      select: (attachment, idx) => {\n        /* Populate subsequent fields of this kind\n         * if this field is in a repeater field and\n         * user has selected multiple files.\n         */\n        let $row = multiple && $field.closest('.acf-row')\n        \n        if (idx > 0) {\n          const key = $field.data('key')\n          \n          $field = false\n\n          // find next field\n          $row.nextAll('.acf-row:visible').each((idx, el) => {\n            $field = acf.get_field(key, $(el))\n            \n            if (!$field)\n              return\n            \n            // bail early if next file uploader has value\n            if ($field.find('.acf-file-uploader.has-value').exists()) {\n              $field = false\n              return\n            } \n              \n            // end loop if $next is found\n            return false\n          })\n          \n          // add extra row if next is not found\n          if (!$field) {\n            $row = acf.fields.repeater.doFocus($repeater).add()\n            \n            // bail early if no $row (maximum rows hit)\n            if (!$row)\n              return false\n            \n            // get next $field\n            $field = acf.get_field(key, $row)\n          }\n        }\n\n        const ext = attachment.attributes.url.toLowerCase().split('.').pop()\n        const nextAttributes = { [ext]: attachment.attributes.url }\n        const tag = this.__getTag(nextAttributes)\n      \n        if (\n          attachment.attributes.image &&\n          attachment.attributes.image.src &&\n          !/wp-includes\\/images\\/media\\/(audio|video).png$/.test(attachment.attributes.image.src)\n        )\n          nextAttributes.poster = attachment.attributes.image.src\n\n        const args = { tag, nextAttributes }\n\n        this.set('$field', $field).render(args)\n      }\n    }).open()\n  },\n  edit: function () {\n    const prevAttributes = this.__getAttributesFromInputs()\n    const tag = this.__getTag(prevAttributes)\n    const shortcode = this.__getShortcode(tag, prevAttributes)\n\n    if (shortcode) {\n      const editFrame = wp.media[tag].edit(shortcode).open()\n\n      editFrame.on('close', () => {\n        const nextAttributes = this.__getNextAttributes(tag, editFrame.media.attributes)\n        const $repeater = acf.get_closest_field(this.$field, 'repeater')\n        const args = { tag, nextAttributes, prevAttributes }\n        \n        this.render(args)\n        editFrame.detach()\n      })\n    }\n  },\n  __getAttributesFromInputs: function () {\n    return this.$inputContainer\n      .children()\n      .toArray()\n      .reduce((attributes, el) => {\n        const name = el.getAttribute('name').replace(/.*\\[(.*)\\]$/, '$1')\n        const value = el.getAttribute('value')\n\n        return {\n          ...attributes,\n          [name]: value\n        }\n      }, {})\n  },\n  __getShortcode: function (tag, attributes) {\n    const atts = Object\n      .keys(attributes)\n      .reduce(\n        (atts, name) =>\n          `${atts} ${name}=\"${attributes[name]}\"`,\n        ''\n      )\n      \n    return atts && `[${tag} ${atts}][/${tag}]`\n  },\n  __getNextAttributes: function (tag, frameAttributes) {\n    const defaults = this.o.playerDefaults[tag]\n    const nextAttributes = {}\n\n    if (frameAttributes.poster)\n      nextAttributes.poster = frameAttributes.poster\n\n    Object.keys(defaults).forEach(name => {\n      if (frameAttributes[name] != defaults[name])\n        nextAttributes[name] = frameAttributes[name]\n    })\n\n    this.allowedTypes.forEach(ext => {\n      if (frameAttributes[ext])\n        nextAttributes[ext] = frameAttributes[ext]\n    })\n\n    return nextAttributes\n  },\n  remove: function () {\n    this.render({})\n  }\n})\n\n/* auto-bind context to custom helper methods */\nObject.keys(acf.fields.audioVideo).forEach(prop => {\n  if (/^__/.test(prop))\n    acf.fields.audioVideo[prop] = acf.fields.audioVideo[prop].bind(acf.fields.audioVideo)\n})\n\n\n// WEBPACK FOOTER //\n// ./scripts/src/field/index.js","const $ = jQuery\n\nexport default class SelectFrame {\n  constructor(settings) {\n    let postId = acf.get('post_id')\n    \n    if (!$.isNumeric(postId))\n      postId = 0\n\n    this.settings = {\n      mode: 'select',   // 'select', 'edit'\n      title: '',        // 'Upload Image'\n      button: '',       // 'Select Image'\n      type: '',         // 'image', ''\n      field: '',        // 'field_123'\n      mime_types: '',   // 'pdf, etc'\n      library: 'all',   // 'all', 'uploadedTo'\n      multiple: false,  // false, true, 'add'\n      attachment: 0,    // the attachment to edit\n      post_id: postId,  // the post being edited\n      select: function () {},\n      ...settings\n    }\n    \n    if (this.settings.id)\n      this.settings.attachment = this.settings.id\n    \n    this.createFrame()\n    \n    acf.media.frames.push(this.frame)\n\n    return this\n  }\n  createFrame = () => {\n    const attributes = acf.media._get_media_frame_settings({\n      title: this.settings.title,\n      multiple: this.settings.multiple,\n      library: {},\n      states: [],\n    }, this.settings)\n\n    if (this.settings.hasOwnProperty('mime_types'))\n      attributes.library.type = this._getLibraryTypes()\n\n    const Query = wp.media.query(attributes.library)\n    \n    if (acf.isset(Query, 'mirroring', 'args'))\n      Query.mirroring.args._acfuploader = this.settings.field\n    \n    attributes.states = [\n      new wp.media.controller.Library({\n        library: Query,\n        multiple: attributes.multiple,\n        title: attributes.title,\n        priority: 20,\n        filterable: 'all',\n        editable: true,\n        allowLocalEdits: true\n      })\n    ]\n    \n    if (acf.isset(wp, 'media', 'controller', 'EditImage'))\n      attributes.states.push(new wp.media.controller.EditImage())\n    \n    this.frame = wp.media(attributes)\n    this.frame.uploader.options.uploader.params.allowed_extensions = this.settings.mime_types\n    this.frame.acf = this.settings\n    this.addEvents()\n    this.frame = acf.media._add_media_frame_events(this.frame, this.settings)\n  }\n  addEvents = () => {\n    this.frame.on('content:activate:browse', () => {\n      const toolbar = this.frame.content.get().toolbar\n      const filters = toolbar.get('filters')\n      \n      filters.filters.all.text = acf._e('audioVideo', 'all')\n\n      delete filters.filters.uploaded\n      delete filters.filters.audio\n      delete filters.filters.video\n      delete filters.filters.image\n      \n      $.each(filters.filters, (k, filter) => {\n        if (filter.props.type === null)\n          filter.props.type = this.settings.type\n      })\n    })\n  }\n  open = () => {\n    setTimeout(() =>\n      this.frame.open()\n    )\n\n    return this\n  }\n  _getLibraryTypes = () => {\n    const allowedTypes = this.settings.mime_types.split(',').map(t => t.trim())\n    const generalType = this.settings.type instanceof String\n      ? this.settings.type\n      : 'video'\n\n    const libraryTypes = allowedTypes.map(ext =>\n      acf.fields.audioVideo.__getMime(generalType, ext)\n    )\n\n    /* allow both audio/ogg and video/ogg */\n    if (this.settings.type instanceof Array && allowedTypes.indexOf('ogg') > -1)\n      libraryTypes.push('audio/ogg')\n\n    return libraryTypes\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./scripts/src/field/SelectFrame.js"],"sourceRoot":""}