{"version":3,"sources":["webpack:///acf-audio-video-field.min.js","webpack:///webpack/bootstrap 5f4918c988ae97e02228","webpack:///./scripts/src/field/index.js","webpack:///./scripts/src/field/SelectFrame.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_defineProperty","key","value","Object","defineProperty","enumerable","configurable","writable","_extends","assign","target","i","arguments","length","source","prototype","hasOwnProperty","_typeof","Symbol","iterator","constructor","_SelectFrame","_SelectFrame2","$","jQuery","acf","fields","audioVideo","field","extend","type","$el","actions","ready","append","events","click a[data-name=\"add\"]","click a[data-name=\"edit\"]","click a[data-name=\"remove\"]","focus","this","$field","find","$inputContainer","$playerContainer","o","get_data","allowedTypes","allowed_types","split","map","t","trim","selectFrameType","general_type","initialize","__getTag","attributes","console","log","__guessTag","audio_types","indexOf","render","_ref","_this","tag","nextAttributes","prevAttributes","repeaterKey","rowId","sources","__getSources","empty","removeClass","$mediaElement","addClass","html","__getPlayerMarkup","MediaElementPlayer","keys","forEach","name","__insertHiddenInput","__triggerChange","_this2","reduce","ext","concat","__getMime","src","atts","__getTagAtts","height","_ref2","defaults","playerDefaults","attName","_$field$data","data","attr","appendTo","_","isEqual","children","trigger","add","_this3","$repeater","get_closest_field","multiple","exists","selectFrame","title","_e","mode","library","mime_types","select","attachment","idx","$row","closest","_ret","nextAll","each","el","get_field","repeater","doFocus","v","url","toLowerCase","pop","image","test","poster","args","set","open","edit","_this4","__getAttributesFromInputs","shortcode","__getShortcode","editFrame","wp","media","on","__getNextAttributes","detach","toArray","getAttribute","replace","frameAttributes","remove","prop","bind","_classCallCheck","instance","Constructor","TypeError","SelectFrame","settings","createFrame","_get_media_frame_settings","states","Query","query","isset","mirroring","_acfuploader","controller","Library","priority","filterable","editable","allowLocalEdits","push","EditImage","frame","uploader","options","params","allowed_extensions","addEvents","_add_media_frame_events","toolbar","content","get","filters","all","text","uploaded","audio","video","k","filter","props","setTimeout","postId","isNumeric","button","post_id","frames"],"mappings":"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","file":"acf-audio-video-field.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _SelectFrame = __webpack_require__(1);\n\t\n\tvar _SelectFrame2 = _interopRequireDefault(_SelectFrame);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tvar $ = jQuery;\n\t\n\tacf.fields.audioVideo = acf.field.extend({\n\t  type: 'audioVideo',\n\t  $el: null,\n\t  actions: {\n\t    'ready': 'initialize',\n\t    'append': 'initialize'\n\t  },\n\t  events: {\n\t    'click a[data-name=\"add\"]': 'add',\n\t    'click a[data-name=\"edit\"]': 'edit',\n\t    'click a[data-name=\"remove\"]': 'remove'\n\t  },\n\t  focus: function focus() {\n\t    this.$el = this.$field.find('.acf-audio-video-uploader');\n\t    this.$inputContainer = this.$el.find('.acf-hidden');\n\t    this.$playerContainer = this.$el.find('.player-container');\n\t    this.o = acf.get_data(this.$el);\n\t    this.allowedTypes = this.o.allowed_types.split(',').map(function (t) {\n\t      return t.trim();\n\t    });\n\t    this.selectFrameType = !this.o.general_type || this.o.general_type == 'both' ? ['audio', 'video'] : this.o.general_type;\n\t  },\n\t  initialize: function initialize() {\n\t    /* noop */\n\t  },\n\t  __getTag: function __getTag(attributes) {\n\t    if (typeof attributes === 'undefined') console.log({ this: this });\n\t\n\t    return this.o.general_type && this.o.general_type !== 'both' ? this.o.general_type : this.__guessTag(attributes);\n\t  },\n\t  __guessTag: function __guessTag(attributes) {\n\t    for (var i = 0; i < this.allowedTypes.length; i++) {\n\t      if (attributes[this.allowedTypes[i]]) {\n\t        return this.o.audio_types.indexOf(this.allowedTypes[i]) > -1 ? 'audio' : 'video';\n\t      }\n\t    }return 'video';\n\t  },\n\t  render: function render(_ref) {\n\t    var _this = this;\n\t\n\t    var tag = _ref.tag;\n\t    var nextAttributes = _ref.nextAttributes;\n\t    var prevAttributes = _ref.prevAttributes;\n\t    var repeaterKey = _ref.repeaterKey;\n\t    var rowId = _ref.rowId;\n\t\n\t    var sources = tag ? this.__getSources(tag, nextAttributes) : [];\n\t\n\t    this.$playerContainer.empty().removeClass('audio video');\n\t    this.$inputContainer.empty();\n\t\n\t    if (sources.length) {\n\t      var $mediaElement = this.$playerContainer.addClass(tag).html(this.__getPlayerMarkup(tag, nextAttributes, sources)).find(tag);\n\t\n\t      new MediaElementPlayer($mediaElement);\n\t\n\t      Object.keys(nextAttributes).forEach(function (name) {\n\t        return _this.__insertHiddenInput(name, nextAttributes[name], repeaterKey, rowId);\n\t      });\n\t      this.$el.addClass('has-value');\n\t    } else {\n\t      this.__insertHiddenInput();\n\t      this.$el.removeClass('has-value');\n\t    }\n\t\n\t    this.__triggerChange(prevAttributes, nextAttributes);\n\t  },\n\t  __getSources: function __getSources(tag, attributes) {\n\t    var _this2 = this;\n\t\n\t    return this.allowedTypes.reduce(function (sources, ext) {\n\t      return attributes[ext] ? sources.concat({\n\t        type: _this2.__getMime(tag, ext),\n\t        src: attributes[ext]\n\t      }) : sources;\n\t    }, []);\n\t  },\n\t  __getMime: function __getMime(tag, ext) {\n\t    switch (ext) {\n\t      case 'mp3':\n\t        return 'audio/mpeg';\n\t      case 'wav':\n\t        return 'audio/wav';\n\t      case 'mp4':\n\t      case 'm4v':\n\t        return 'video/mp4';\n\t      case 'webm':\n\t        return 'video/webm';\n\t      case 'ogv':\n\t        return 'video/ogg';\n\t      case 'ogg':\n\t        return tag + '/ogg';\n\t      case 'flv':\n\t        return 'video/flv';\n\t      default:\n\t        return tag + '/' + ext;\n\t    }\n\t  },\n\t  __getPlayerMarkup: function __getPlayerMarkup(tag, attributes, sources) {\n\t    var atts = this.__getTagAtts(tag, attributes);\n\t    var height = tag == 'video' ? 'height=\"360\"' : '';\n\t\n\t    return '<div class=\"wp-' + tag + '\">\\n      <!--[if lt IE 9]><script>document.createElement(\\'' + tag + '\\');</script><![endif]-->\\n      <' + tag + ' class=\"wp-' + tag + '-shortcode\" width=\"640\" ' + height + ' ' + atts + ' controls>\\n        ' + sources.map(function (_ref2) {\n\t      var type = _ref2.type;\n\t      var src = _ref2.src;\n\t      return '<source type=\"' + type + '\" src=\"' + src + '?_=1\"/>';\n\t    }) + '\\n      </' + tag + '>\\n    </div>';\n\t  },\n\t  __getTagAtts: function __getTagAtts(tag, attributes) {\n\t    var defaults = this.o.playerDefaults[tag];\n\t\n\t    return Object.keys(defaults).concat('poster').reduce(function (atts, name) {\n\t      return attributes.hasOwnProperty(name) ? atts + ' ' + name + '=\"' + attributes[name] + '\"' : atts;\n\t    }, '');\n\t  },\n\t  __insertHiddenInput: function __insertHiddenInput(attName, value, repeaterKey, rowId) {\n\t    var _$field$data = this.$field.data();\n\t\n\t    var key = _$field$data.key;\n\t\n\t    var name = !attName ? 'acf[' + key + ']' : repeaterKey && rowId ? 'acf[' + repeaterKey + '][' + rowId + '][' + key + '][' + attName + ']' : 'acf[' + key + '][' + attName + ']';\n\t\n\t    $('<input type=\"hidden\">').attr({ name: name, value: value }).appendTo(this.$inputContainer);\n\t  },\n\t  __triggerChange: function __triggerChange(prevAttributes, nextAttributes) {\n\t    /* register unsaved changes */\n\t    if (!prevAttributes || !_.isEqual(prevAttributes, nextAttributes)) this.$inputContainer.children(':first').trigger('change');\n\t  },\n\t  add: function add() {\n\t    var _this3 = this;\n\t\n\t    var $field = this.$field;\n\t    var $repeater = acf.get_closest_field($field, 'repeater');\n\t    var multiple = $repeater.exists();\n\t    this.selectFrame = new _SelectFrame2.default({\n\t      title: acf._e('audioVideo', 'select'),\n\t      mode: 'select',\n\t      type: this.selectFrameType,\n\t      field: $field.data('key'),\n\t      multiple: multiple,\n\t      library: this.o.library,\n\t      mime_types: this.o.allowed_types,\n\t      select: function select(attachment, idx) {\n\t        /* Populate subsequent fields of this kind\n\t         * if this field is in a repeater field and\n\t         * user has selected multiple files.\n\t         */\n\t        var $row = multiple && $field.closest('.acf-row');\n\t\n\t        if (idx > 0) {\n\t          var _ret = function () {\n\t            var key = $field.data('key');\n\t\n\t            $field = false;\n\t\n\t            // find next field\n\t            $row.nextAll('.acf-row:visible').each(function (idx, el) {\n\t              $field = acf.get_field(key, $(el));\n\t\n\t              if (!$field) return;\n\t\n\t              // bail early if next file uploader has value\n\t              if ($field.find('.acf-file-uploader.has-value').exists()) {\n\t                $field = false;\n\t                return;\n\t              }\n\t\n\t              // end loop if $next is found\n\t              return false;\n\t            });\n\t\n\t            // add extra row if next is not found\n\t            if (!$field) {\n\t              $row = acf.fields.repeater.doFocus($repeater).add();\n\t\n\t              // bail early if no $row (maximum rows hit)\n\t              if (!$row) return {\n\t                  v: false\n\t                };\n\t\n\t              // get next $field\n\t              $field = acf.get_field(key, $row);\n\t            }\n\t          }();\n\t\n\t          if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n\t        }\n\t\n\t        var ext = attachment.attributes.url.toLowerCase().split('.').pop();\n\t        var nextAttributes = _defineProperty({}, ext, attachment.attributes.url);\n\t        var tag = _this3.__getTag(nextAttributes);\n\t\n\t        if (attachment.attributes.image && attachment.attributes.image.src && !/wp-includes\\/images\\/media\\/(audio|video).png$/.test(attachment.attributes.image.src)) nextAttributes.poster = attachment.attributes.image.src;\n\t\n\t        var args = { tag: tag, nextAttributes: nextAttributes };\n\t\n\t        if (multiple) {\n\t          args.repeaterKey = $repeater.data('key');\n\t          args.rowId = $row.data('id');\n\t        }\n\t\n\t        _this3.set('$field', $field).render(args);\n\t      }\n\t    }).open();\n\t  },\n\t  edit: function edit() {\n\t    var _this4 = this;\n\t\n\t    var prevAttributes = this.__getAttributesFromInputs();\n\t    var tag = this.__getTag(prevAttributes);\n\t    var shortcode = this.__getShortcode(tag, prevAttributes);\n\t\n\t    if (shortcode) {\n\t      (function () {\n\t        var editFrame = wp.media[tag].edit(shortcode).open();\n\t\n\t        editFrame.on('close', function () {\n\t          var nextAttributes = _this4.__getNextAttributes(tag, editFrame.media.attributes);\n\t          var $repeater = acf.get_closest_field(_this4.$field, 'repeater');\n\t          var args = { tag: tag, nextAttributes: nextAttributes, prevAttributes: prevAttributes };\n\t\n\t          if ($repeater.exists()) {\n\t            args.repeaterKey = $repeater.data('key');\n\t            args.rowId = _this4.$field.closest('.acf-row').data('id');\n\t          }\n\t\n\t          _this4.render(args);\n\t          editFrame.detach();\n\t        });\n\t      })();\n\t    }\n\t  },\n\t  __getAttributesFromInputs: function __getAttributesFromInputs() {\n\t    return this.$inputContainer.children().toArray().reduce(function (attributes, el) {\n\t      var name = el.getAttribute('name').replace(/.*\\[(.*)\\]$/, '$1');\n\t      var value = el.getAttribute('value');\n\t\n\t      return _extends({}, attributes, _defineProperty({}, name, value));\n\t    }, {});\n\t  },\n\t  __getShortcode: function __getShortcode(tag, attributes) {\n\t    var atts = Object.keys(attributes).reduce(function (atts, name) {\n\t      return atts + ' ' + name + '=\"' + attributes[name] + '\"';\n\t    }, '');\n\t\n\t    return atts && '[' + tag + ' ' + atts + '][/' + tag + ']';\n\t  },\n\t  __getNextAttributes: function __getNextAttributes(tag, frameAttributes) {\n\t    var defaults = this.o.playerDefaults[tag];\n\t    var nextAttributes = {};\n\t\n\t    if (frameAttributes.poster) nextAttributes.poster = frameAttributes.poster;\n\t\n\t    Object.keys(defaults).forEach(function (name) {\n\t      if (frameAttributes[name] != defaults[name]) nextAttributes[name] = frameAttributes[name];\n\t    });\n\t\n\t    this.allowedTypes.forEach(function (ext) {\n\t      if (frameAttributes[ext]) nextAttributes[ext] = frameAttributes[ext];\n\t    });\n\t\n\t    return nextAttributes;\n\t  },\n\t  remove: function remove() {\n\t    this.render({});\n\t  }\n\t});\n\t\n\t/* auto-bind context to custom helper methods */\n\tObject.keys(acf.fields.audioVideo).forEach(function (prop) {\n\t  if (/^__/.test(prop)) acf.fields.audioVideo[prop] = acf.fields.audioVideo[prop].bind(acf.fields.audioVideo);\n\t});\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar $ = jQuery;\n\t\n\tvar SelectFrame = function SelectFrame(settings) {\n\t  var _this = this;\n\t\n\t  _classCallCheck(this, SelectFrame);\n\t\n\t  this.createFrame = function () {\n\t    var attributes = acf.media._get_media_frame_settings({\n\t      title: _this.settings.title,\n\t      multiple: _this.settings.multiple,\n\t      library: {},\n\t      states: []\n\t    }, _this.settings);\n\t    var Query = wp.media.query(attributes.library);\n\t\n\t    if (acf.isset(Query, 'mirroring', 'args')) Query.mirroring.args._acfuploader = _this.settings.field;\n\t\n\t    attributes.states = [new wp.media.controller.Library({\n\t      library: Query,\n\t      multiple: attributes.multiple,\n\t      title: attributes.title,\n\t      priority: 20,\n\t      filterable: 'all',\n\t      editable: true,\n\t      allowLocalEdits: true\n\t    })];\n\t\n\t    if (acf.isset(wp, 'media', 'controller', 'EditImage')) attributes.states.push(new wp.media.controller.EditImage());\n\t\n\t    _this.frame = wp.media(attributes);\n\t    _this.frame.uploader.options.uploader.params.allowed_extensions = _this.settings.mime_types;\n\t    _this.frame.acf = _this.settings;\n\t    _this.addEvents();\n\t    _this.frame = acf.media._add_media_frame_events(_this.frame, _this.settings);\n\t  };\n\t\n\t  this.addEvents = function () {\n\t    _this.frame.on('content:activate:browse', function () {\n\t      var toolbar = _this.frame.content.get().toolbar;\n\t      var filters = toolbar.get('filters');\n\t\n\t      filters.filters.all.text = acf._e('audioVideo', 'all');\n\t\n\t      delete filters.filters.uploaded;\n\t      delete filters.filters.audio;\n\t      delete filters.filters.video;\n\t      delete filters.filters.image;\n\t\n\t      $.each(filters.filters, function (k, filter) {\n\t        if (filter.props.type === null) filter.props.type = _this.settings.type;\n\t      });\n\t    });\n\t  };\n\t\n\t  this.open = function () {\n\t    setTimeout(function () {\n\t      return _this.frame.open();\n\t    });\n\t\n\t    return _this;\n\t  };\n\t\n\t  var postId = acf.get('post_id');\n\t\n\t  if (!$.isNumeric(postId)) postId = 0;\n\t\n\t  this.settings = _extends({\n\t    mode: 'select', // 'select', 'edit'\n\t    title: '', // 'Upload Image'\n\t    button: '', // 'Select Image'\n\t    type: '', // 'image', ''\n\t    field: '', // 'field_123'\n\t    mime_types: '', // 'pdf, etc'\n\t    library: 'all', // 'all', 'uploadedTo'\n\t    multiple: false, // false, true, 'add'\n\t    attachment: 0, // the attachment to edit\n\t    post_id: postId, // the post being edited\n\t    select: function select() {}\n\t  }, settings);\n\t\n\t  if (this.settings.id) this.settings.attachment = this.settings.id;\n\t\n\t  this.createFrame();\n\t\n\t  acf.media.frames.push(this.frame);\n\t\n\t  return this;\n\t};\n\t\n\texports.default = SelectFrame;\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** acf-audio-video-field.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 5f4918c988ae97e02228\n **/","import SelectFrame from './SelectFrame'\n\nconst $ = jQuery\n\nacf.fields.audioVideo = acf.field.extend({\n  type: 'audioVideo',\n  $el: null,\n  actions: {\n    'ready': 'initialize',\n    'append': 'initialize'\n  },\n  events: {\n    'click a[data-name=\"add\"]': 'add',\n    'click a[data-name=\"edit\"]': 'edit',\n    'click a[data-name=\"remove\"]': 'remove'\n  },\n  focus: function () {\n    this.$el = this.$field.find('.acf-audio-video-uploader')\n    this.$inputContainer = this.$el.find('.acf-hidden')\n    this.$playerContainer = this.$el.find('.player-container')\n    this.o = acf.get_data(this.$el)\n    this.allowedTypes = this.o.allowed_types.split(',').map(t => t.trim())\n    this.selectFrameType = !this.o.general_type || this.o.general_type == 'both'\n      ? ['audio', 'video']\n      : this.o.general_type\n  },\n  initialize: function () {\n    /* noop */\n  },\n  __getTag: function (attributes) {\n    if (typeof attributes === 'undefined')\n      console.log({ this })\n\n    return this.o.general_type && this.o.general_type !== 'both'\n      ? this.o.general_type\n      : this.__guessTag(attributes)\n  },\n  __guessTag: function (attributes) {\n    for (let i = 0; i < this.allowedTypes.length; i++)\n      if (attributes[this.allowedTypes[i]]) {\n        return this.o.audio_types.indexOf(this.allowedTypes[i]) > -1\n          ? 'audio'\n          : 'video'\n      }\n\n    return 'video'\n  },\n  render: function ({ tag, nextAttributes, prevAttributes, repeaterKey, rowId }) {\n    const sources = tag\n      ? this.__getSources(tag, nextAttributes)\n      : []\n    \n    this.$playerContainer.empty().removeClass('audio video')\n    this.$inputContainer.empty()\n\n    if (sources.length) {\n      const $mediaElement = this.$playerContainer\n        .addClass(tag)\n        .html(this.__getPlayerMarkup(tag, nextAttributes, sources))\n        .find(tag)\n\n      new MediaElementPlayer($mediaElement)\n      \n      Object.keys(nextAttributes).forEach(name =>\n        this.__insertHiddenInput(name, nextAttributes[name], repeaterKey, rowId)\n      )\n      this.$el.addClass('has-value')\n    } else {\n      this.__insertHiddenInput()\n      this.$el.removeClass('has-value')\n    }\n\n    this.__triggerChange(prevAttributes, nextAttributes);\n  },\n  __getSources: function (tag, attributes) {\n    return this.allowedTypes.reduce(\n      (sources, ext) =>\n        attributes[ext]\n          ? sources.concat({\n              type: this.__getMime(tag, ext),\n              src: attributes[ext]\n            })\n          : sources,\n      []\n    )\n  },\n  __getMime: function (tag, ext) {\n    switch(ext) {\n      case 'mp3':\n        return 'audio/mpeg'\n      case 'wav':\n        return 'audio/wav'\n      case 'mp4':\n      case 'm4v':\n        return 'video/mp4'\n      case 'webm':\n        return 'video/webm'\n      case 'ogv':\n        return 'video/ogg'\n      case 'ogg':\n        return `${tag}/ogg`\n      case 'flv':\n        return 'video/flv'\n      default:\n        return `${tag}/${ext}`\n    }\n  },\n  __getPlayerMarkup: function (tag, attributes, sources) {\n    const atts = this.__getTagAtts(tag, attributes)\n    const height = tag == 'video'\n      ? 'height=\"360\"'\n      : ''\n\n    return `<div class=\"wp-${tag}\">\n      <!--[if lt IE 9]><script>document.createElement('${tag}');</script><![endif]-->\n      <${tag} class=\"wp-${tag}-shortcode\" width=\"640\" ${height} ${atts} controls>\n        ${sources.map(({ type, src }) =>\n          `<source type=\"${type}\" src=\"${src}?_=1\"/>`\n        )}\n      </${tag}>\n    </div>`\n  },\n  __getTagAtts: function (tag, attributes) {\n    const defaults = this.o.playerDefaults[tag]\n\n    return Object\n      .keys(defaults).concat('poster')\n      .reduce(\n        (atts, name) =>\n          attributes.hasOwnProperty(name)\n            ? `${atts} ${name}=\"${attributes[name]}\"`\n            : atts,\n        ''\n      )\n  },\n  __insertHiddenInput: function (attName, value, repeaterKey, rowId) {\n    const { key } = this.$field.data()\n    const name = !attName\n      ? `acf[${key}]`\n      : repeaterKey && rowId\n        ? `acf[${repeaterKey}][${rowId}][${key}][${attName}]`\n        : `acf[${key}][${attName}]`\n\n    $('<input type=\"hidden\">')\n      .attr({ name, value })\n      .appendTo(this.$inputContainer)\n  },\n  __triggerChange: function (prevAttributes, nextAttributes) {\n    /* register unsaved changes */\n    if (!prevAttributes || !_.isEqual(prevAttributes, nextAttributes))\n      this.$inputContainer.children(':first').trigger('change')\n  },\n  add: function () {\n    let $field = this.$field\n    const $repeater = acf.get_closest_field($field, 'repeater')\n    const multiple = $repeater.exists()\n    this.selectFrame = new SelectFrame({\n      title: acf._e('audioVideo', 'select'),\n      mode: 'select',\n      type: this.selectFrameType,\n      field: $field.data('key'),\n      multiple,\n      library: this.o.library,\n      mime_types: this.o.allowed_types,\n      select: (attachment, idx) => {\n        /* Populate subsequent fields of this kind\n         * if this field is in a repeater field and\n         * user has selected multiple files.\n         */\n        let $row = multiple && $field.closest('.acf-row')\n        \n        if (idx > 0) {\n          const key = $field.data('key')\n          \n          $field = false\n\n          // find next field\n          $row.nextAll('.acf-row:visible').each((idx, el) => {\n            $field = acf.get_field(key, $(el))\n            \n            if (!$field)\n              return\n            \n            // bail early if next file uploader has value\n            if ($field.find('.acf-file-uploader.has-value').exists()) {\n              $field = false\n              return\n            } \n              \n            // end loop if $next is found\n            return false\n          })\n          \n          // add extra row if next is not found\n          if (!$field) {\n            $row = acf.fields.repeater.doFocus($repeater).add()\n            \n            // bail early if no $row (maximum rows hit)\n            if (!$row)\n              return false\n            \n            // get next $field\n            $field = acf.get_field(key, $row)\n          }\n        }\n\n        const ext = attachment.attributes.url.toLowerCase().split('.').pop()\n        const nextAttributes = { [ext]: attachment.attributes.url }\n        const tag = this.__getTag(nextAttributes)\n      \n        if (\n          attachment.attributes.image &&\n          attachment.attributes.image.src &&\n          !/wp-includes\\/images\\/media\\/(audio|video).png$/.test(attachment.attributes.image.src)\n        )\n          nextAttributes.poster = attachment.attributes.image.src\n\n        const args = { tag, nextAttributes }\n\n        if (multiple) {\n          args.repeaterKey = $repeater.data('key')\n          args.rowId = $row.data('id')\n        }\n\n        this.set('$field', $field).render(args)\n      }\n    }).open()\n  },\n  edit: function () {\n    const prevAttributes = this.__getAttributesFromInputs()\n    const tag = this.__getTag(prevAttributes)\n    const shortcode = this.__getShortcode(tag, prevAttributes)\n\n    if (shortcode) {\n      const editFrame = wp.media[tag].edit(shortcode).open()\n\n      editFrame.on('close', () => {\n        const nextAttributes = this.__getNextAttributes(tag, editFrame.media.attributes)\n        const $repeater = acf.get_closest_field(this.$field, 'repeater')\n        const args = { tag, nextAttributes, prevAttributes }\n\n        if ($repeater.exists()) {\n          args.repeaterKey = $repeater.data('key')\n          args.rowId = this.$field.closest('.acf-row').data('id')\n        }\n        \n        this.render(args)\n        editFrame.detach()\n      })\n    }\n  },\n  __getAttributesFromInputs: function () {\n    return this.$inputContainer\n      .children()\n      .toArray()\n      .reduce((attributes, el) => {\n        const name = el.getAttribute('name').replace(/.*\\[(.*)\\]$/, '$1')\n        const value = el.getAttribute('value')\n\n        return {\n          ...attributes,\n          [name]: value\n        }\n      }, {})\n  },\n  __getShortcode: function (tag, attributes) {\n    const atts = Object\n      .keys(attributes)\n      .reduce(\n        (atts, name) =>\n          `${atts} ${name}=\"${attributes[name]}\"`,\n        ''\n      )\n      \n    return atts && `[${tag} ${atts}][/${tag}]`\n  },\n  __getNextAttributes: function (tag, frameAttributes) {\n    const defaults = this.o.playerDefaults[tag]\n    const nextAttributes = {}\n\n    if (frameAttributes.poster)\n      nextAttributes.poster = frameAttributes.poster\n\n    Object.keys(defaults).forEach(name => {\n      if (frameAttributes[name] != defaults[name])\n        nextAttributes[name] = frameAttributes[name]\n    })\n\n    this.allowedTypes.forEach(ext => {\n      if (frameAttributes[ext])\n        nextAttributes[ext] = frameAttributes[ext]\n    })\n\n    return nextAttributes\n  },\n  remove: function () {\n    this.render({})\n  }\n})\n\n/* auto-bind context to custom helper methods */\nObject.keys(acf.fields.audioVideo).forEach(prop => {\n  if (/^__/.test(prop))\n    acf.fields.audioVideo[prop] = acf.fields.audioVideo[prop].bind(acf.fields.audioVideo)\n})\n\n\n/** WEBPACK FOOTER **\n ** ./scripts/src/field/index.js\n **/","const $ = jQuery\n\nexport default class SelectFrame {\n  constructor(settings) {\n    let postId = acf.get('post_id')\n    \n    if (!$.isNumeric(postId))\n      postId = 0\n\n    this.settings = {\n      mode: 'select',   // 'select', 'edit'\n      title: '',        // 'Upload Image'\n      button: '',       // 'Select Image'\n      type: '',         // 'image', ''\n      field: '',        // 'field_123'\n      mime_types: '',   // 'pdf, etc'\n      library: 'all',   // 'all', 'uploadedTo'\n      multiple: false,  // false, true, 'add'\n      attachment: 0,    // the attachment to edit\n      post_id: postId,  // the post being edited\n      select: function () {},\n      ...settings\n    }\n    \n    if (this.settings.id)\n      this.settings.attachment = this.settings.id\n    \n    this.createFrame()\n    \n    acf.media.frames.push(this.frame)\n\n    return this\n  }\n  createFrame = () => {\n    const attributes = acf.media._get_media_frame_settings({\n      title: this.settings.title,\n      multiple: this.settings.multiple,\n      library: {},\n      states: [],\n    }, this.settings)      \n    const Query = wp.media.query(attributes.library)\n    \n    if (acf.isset(Query, 'mirroring', 'args'))\n      Query.mirroring.args._acfuploader = this.settings.field\n    \n    attributes.states = [\n      new wp.media.controller.Library({\n        library: Query,\n        multiple: attributes.multiple,\n        title: attributes.title,\n        priority: 20,\n        filterable: 'all',\n        editable: true,\n        allowLocalEdits: true\n      })\n    ]\n    \n    if (acf.isset(wp, 'media', 'controller', 'EditImage'))\n      attributes.states.push(new wp.media.controller.EditImage())\n    \n    this.frame = wp.media(attributes)\n    this.frame.uploader.options.uploader.params.allowed_extensions = this.settings.mime_types\n    this.frame.acf = this.settings\n    this.addEvents()\n    this.frame = acf.media._add_media_frame_events(this.frame, this.settings)\n  }\n  addEvents = () => {\n    this.frame.on('content:activate:browse', () => {\n      const toolbar = this.frame.content.get().toolbar\n      const filters = toolbar.get('filters')\n      \n      filters.filters.all.text = acf._e('audioVideo', 'all')\n\n      delete filters.filters.uploaded\n      delete filters.filters.audio\n      delete filters.filters.video\n      delete filters.filters.image\n      \n      $.each(filters.filters, (k, filter) => {\n        if (filter.props.type === null)\n          filter.props.type = this.settings.type\n      })\n    })\n  }\n  open = () => {\n    setTimeout(() =>\n      this.frame.open()\n    )\n\n    return this\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./scripts/src/field/SelectFrame.js\n **/"],"sourceRoot":""}